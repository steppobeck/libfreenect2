##############################################################################
# search paths
##############################################################################
SET(RGBDCOMPRESSION_INCLUDE_SEARCH_DIRS
  ${GLOBAL_EXT_DIR}/inc/RGBDCompression
  ${RGBDCOMPRESSION_INCLUDE_DIRS}
  ${RGBDCOMPRESSION_INCLUDE_SEARCH_DIR}
  "/home/steppo/Desktop/my-svn/multiViewTools/libRGBDCompression/src"
)

SET(RGBDCOMPRESSION_LIBRARY_SEARCH_DIRS
  ${GLOBAL_EXT_DIR}/lib
  ${RGBDCOMPRESSION_LIBRARY_DIRS}
  ${RGBDCOMPRESSION_LIBRARY_SEARCH_DIR}
  "/home/steppo/Desktop/my-svn/multiViewTools/libRGBDCompression/src"
)

##############################################################################
# feedback to provide user-defined paths to search for RGBDCompression
##############################################################################
MACRO (request_RGBDCompression_search_directories)
    
  IF ( NOT RGBDCOMPRESSION_INCLUDE_DIRS AND NOT RGBDCOMPRESSION_LIBRARY_DIRS )
    SET(RGBDCOMPRESSION_INCLUDE_SEARCH_DIR "Please provide RGBDCompression include path." CACHE PATH "path to RGBDCompression headers.")
    SET(RGBDCOMPRESSION_LIBRARY_SEARCH_DIR "Please provide RGBDCompression library path." CACHE PATH "path to RGBDCompression libraries.")
    MESSAGE(FATAL_ERROR "find_RGBDCompression.cmake: unable to find RGBDCompression.")
  ENDIF ( NOT RGBDCOMPRESSION_INCLUDE_DIRS AND NOT RGBDCOMPRESSION_LIBRARY_DIRS )

  IF ( NOT RGBDCOMPRESSION_INCLUDE_DIRS )
    SET(RGBDCOMPRESSION_INCLUDE_SEARCH_DIR "Please provide RGBDCompression include path." CACHE PATH "path to RGBDCompression headers.")
    MESSAGE(FATAL_ERROR "find_RGBDCompression.cmake: unable to find RGBDCompression headers.")
  ELSE ( NOT RGBDCOMPRESSION_INCLUDE_DIRS )
    UNSET(RGBDCOMPRESSION_INCLUDE_SEARCH_DIR CACHE)
  ENDIF ( NOT RGBDCOMPRESSION_INCLUDE_DIRS )

  IF ( NOT RGBDCOMPRESSION_LIBRARY_DIRS )
    SET(RGBDCOMPRESSION_LIBRARY_SEARCH_DIR "Please provide RGBDCompression library path." CACHE PATH "path to RGBDCompression libraries.")
    MESSAGE(FATAL_ERROR "find_RGBDCompression.cmake: unable to find RGBDCompression libraries.")
  ELSE ( NOT RGBDCOMPRESSION_LIBRARY_DIRS )
    UNSET(RGBDCOMPRESSION_LIBRARY_SEARCH_DIR CACHE)
  ENDIF ( NOT RGBDCOMPRESSION_LIBRARY_DIRS ) 

ENDMACRO (request_RGBDCompression_search_directories)

##############################################################################
# search
##############################################################################
message(STATUS "-- checking for RGBDCOMPRESSION")

IF (NOT RGBDCOMPRESSION_INCLUDE_DIRS)

  SET(_RGBDCOMPRESSION_FOUND_INC_DIRS "")
  FOREACH(_SEARCH_DIR ${RGBDCOMPRESSION_INCLUDE_SEARCH_DIRS})
    FIND_PATH(_CUR_SEARCH
      NAMES RGBDCompressor.h
        PATHS ${_SEARCH_DIR}
        NO_DEFAULT_PATH)
    IF (_CUR_SEARCH)
      LIST(APPEND _RGBDCOMPRESSION_FOUND_INC_DIRS ${_CUR_SEARCH})
    ENDIF(_CUR_SEARCH)
    SET(_CUR_SEARCH _CUR_SEARCH-NOT_FOUND CACHE INTERNAL "internal use")
  ENDFOREACH(_SEARCH_DIR ${RGBDCOMPRESSION_INCLUDE_SEARCH_DIRS})

  IF (NOT _RGBDCOMPRESSION_FOUND_INC_DIRS)
    request_RGBDCompression_search_directories()
  ENDIF (NOT _RGBDCOMPRESSION_FOUND_INC_DIRS)

  FOREACH(_INC_DIR ${_RGBDCOMPRESSION_FOUND_INC_DIRS})
    SET(RGBDCOMPRESSION_INCLUDE_DIRS ${RGBDCOMPRESSION_INCLUDE_DIRS} ${_INC_DIR} CACHE PATH "RGBDCompression include directory.")
  ENDFOREACH(_INC_DIR ${_RGBDCOMPRESSION_FOUND_INC_DIRS})

ENDIF (NOT RGBDCOMPRESSION_INCLUDE_DIRS)

IF(UNIX)
  SET(RGBDCOMPRESSION_LIB_FILENAME "libRGBDCompression.so")
ELSEIF(WIN32)
  SET(RGBDCOMPRESSION_LIB_FILENAME "libRGBDCompression.lib")
ENDIF(UNIX)

IF ( NOT RGBDCOMPRESSION_LIBRARY_DIRS )

  SET(_RGBDCOMPRESSION_FOUND_LIB_DIR "")
  SET(_RGBDCOMPRESSION_POSTFIX "")

  FOREACH(_SEARCH_DIR ${RGBDCOMPRESSION_LIBRARY_SEARCH_DIRS})
    FIND_PATH(_CUR_SEARCH
      NAMES ${RGBDCOMPRESSION_LIB_FILENAME}
        PATHS ${_SEARCH_DIR}
        PATH_SUFFIXES release debug
        NO_DEFAULT_PATH)
    IF (_CUR_SEARCH)
      LIST(APPEND _RGBDCOMPRESSION_FOUND_LIB_DIR ${_SEARCH_DIR})
    ENDIF(_CUR_SEARCH)
    SET(_CUR_SEARCH _CUR_SEARCH-NOT_FOUND CACHE INTERNAL "internal use")
  ENDFOREACH(_SEARCH_DIR ${RGBDCOMPRESSION_LIBRARY_SEARCH_DIRS})

  IF (NOT _RGBDCOMPRESSION_FOUND_LIB_DIR)
    request_RGBDCompression_search_directories()
  ELSE (NOT _RGBDCOMPRESSION_FOUND_LIB_DIR)
    SET(RGBDCOMPRESSION_LIBRARY_DIRS ${_RGBDCOMPRESSION_FOUND_LIB_DIR} CACHE PATH "The RGBDCompression library directory")
  ENDIF (NOT _RGBDCOMPRESSION_FOUND_LIB_DIR)

  FOREACH(_LIB_DIR ${_RGBDCOMPRESSION_FOUND_LIB_DIR})
    LIST(APPEND _RGBDCOMPRESSION_LIBRARIES ${RGBDCOMPRESSION_LIB_FILENAME})
  ENDFOREACH(_LIB_DIR ${_RGBDCOMPRESSION_FOUND_INC_DIRS})

  IF (_RGBDCOMPRESSION_FOUND_LIB_DIR)
    SET(RGBDCOMPRESSION_LIBRARIES ${_RGBDCOMPRESSION_LIBRARIES} CACHE FILEPATH "The RGBDCompression library filename.")
  ENDIF (_RGBDCOMPRESSION_FOUND_LIB_DIR)

ENDIF ( NOT RGBDCOMPRESSION_LIBRARY_DIRS )

##############################################################################
# verify
##############################################################################
IF ( NOT RGBDCOMPRESSION_INCLUDE_DIRS OR NOT RGBDCOMPRESSION_LIBRARY_DIRS )
  request_RGBDCompression_search_directories()
ELSE ( NOT RGBDCOMPRESSION_INCLUDE_DIRS OR NOT RGBDCOMPRESSION_LIBRARY_DIRS ) 
  UNSET(RGBDCOMPRESSION_INCLUDE_SEARCH_DIR CACHE)
  UNSET(RGBDCOMPRESSION_LIBRARY_SEARCH_DIR CACHE)
  MESSAGE(STATUS "--  found matching RGBDCompression version")
ENDIF ( NOT RGBDCOMPRESSION_INCLUDE_DIRS OR NOT RGBDCOMPRESSION_LIBRARY_DIRS )
